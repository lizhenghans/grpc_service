// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.19.4
// source: goods.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	Goods_AddShopCar_FullMethodName              = "/proto.Goods/AddShopCar"
	Goods_AddShopCarNum_FullMethodName           = "/proto.Goods/AddShopCarNum"
	Goods_PopShopCarNum_FullMethodName           = "/proto.Goods/PopShopCarNum"
	Goods_CleanShopCar_FullMethodName            = "/proto.Goods/CleanShopCar"
	Goods_UpdateShopCarNum_FullMethodName        = "/proto.Goods/UpdateShopCarNum"
	Goods_GetShopCarAllPrice_FullMethodName      = "/proto.Goods/GetShopCarAllPrice"
	Goods_UserShopCarList_FullMethodName         = "/proto.Goods/UserShopCarList"
	Goods_UserSearchShopCarByName_FullMethodName = "/proto.Goods/UserSearchShopCarByName"
	Goods_DelOneShopCarData_FullMethodName       = "/proto.Goods/DelOneShopCarData"
	Goods_WelcomeSearchShopList_FullMethodName   = "/proto.Goods/WelcomeSearchShopList"
	Goods_GoodsDetail_FullMethodName             = "/proto.Goods/GoodsDetail"
	Goods_ShopDetail_FullMethodName              = "/proto.Goods/ShopDetail"
	Goods_GoodsPush_FullMethodName               = "/proto.Goods/GoodsPush"
	Goods_WelcomeSearch_FullMethodName           = "/proto.Goods/WelcomeSearch"
	Goods_HotSearch_FullMethodName               = "/proto.Goods/HotSearch"
)

// GoodsClient is the client API for Goods service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GoodsClient interface {
	AddShopCar(ctx context.Context, in *AddShopCarReq, opts ...grpc.CallOption) (*AddShopCarResp, error)
	AddShopCarNum(ctx context.Context, in *AddShopCarNumReq, opts ...grpc.CallOption) (*AddShopCarNumResp, error)
	PopShopCarNum(ctx context.Context, in *PopShopCarNumReq, opts ...grpc.CallOption) (*PopShopCarNumResp, error)
	CleanShopCar(ctx context.Context, in *CleanShopCarReq, opts ...grpc.CallOption) (*CleanShopCarResp, error)
	UpdateShopCarNum(ctx context.Context, in *UpdateShopCarNumReq, opts ...grpc.CallOption) (*UpdateShopCarNumResp, error)
	GetShopCarAllPrice(ctx context.Context, in *GetShopCarAllPriceReq, opts ...grpc.CallOption) (*GetShopCarAllPriceResp, error)
	UserShopCarList(ctx context.Context, in *UserShopCarListReq, opts ...grpc.CallOption) (*UserShopCarListResp, error)
	UserSearchShopCarByName(ctx context.Context, in *UserSearchShopCarByNameReq, opts ...grpc.CallOption) (*UserSearchShopCarByNameResp, error)
	DelOneShopCarData(ctx context.Context, in *DelOneShopCarDataReq, opts ...grpc.CallOption) (*DelOneShopCarDataResp, error)
	WelcomeSearchShopList(ctx context.Context, in *WelcomeSearchShopListReq, opts ...grpc.CallOption) (*WelcomeSearchShopListResp, error)
	GoodsDetail(ctx context.Context, in *GoodsDetailReq, opts ...grpc.CallOption) (*GoodsDetailResp, error)
	ShopDetail(ctx context.Context, in *ShopDetailReq, opts ...grpc.CallOption) (*ShopDetailResp, error)
	GoodsPush(ctx context.Context, in *GoodsPushReq, opts ...grpc.CallOption) (*GoodsPushResp, error)
	WelcomeSearch(ctx context.Context, in *WelcomeSearchReq, opts ...grpc.CallOption) (*WelcomeSearchResp, error)
	HotSearch(ctx context.Context, in *HotSearchReq, opts ...grpc.CallOption) (*HotSearchResp, error)
}

type goodsClient struct {
	cc grpc.ClientConnInterface
}

func NewGoodsClient(cc grpc.ClientConnInterface) GoodsClient {
	return &goodsClient{cc}
}

func (c *goodsClient) AddShopCar(ctx context.Context, in *AddShopCarReq, opts ...grpc.CallOption) (*AddShopCarResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddShopCarResp)
	err := c.cc.Invoke(ctx, Goods_AddShopCar_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) AddShopCarNum(ctx context.Context, in *AddShopCarNumReq, opts ...grpc.CallOption) (*AddShopCarNumResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddShopCarNumResp)
	err := c.cc.Invoke(ctx, Goods_AddShopCarNum_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) PopShopCarNum(ctx context.Context, in *PopShopCarNumReq, opts ...grpc.CallOption) (*PopShopCarNumResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PopShopCarNumResp)
	err := c.cc.Invoke(ctx, Goods_PopShopCarNum_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) CleanShopCar(ctx context.Context, in *CleanShopCarReq, opts ...grpc.CallOption) (*CleanShopCarResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CleanShopCarResp)
	err := c.cc.Invoke(ctx, Goods_CleanShopCar_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) UpdateShopCarNum(ctx context.Context, in *UpdateShopCarNumReq, opts ...grpc.CallOption) (*UpdateShopCarNumResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateShopCarNumResp)
	err := c.cc.Invoke(ctx, Goods_UpdateShopCarNum_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) GetShopCarAllPrice(ctx context.Context, in *GetShopCarAllPriceReq, opts ...grpc.CallOption) (*GetShopCarAllPriceResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetShopCarAllPriceResp)
	err := c.cc.Invoke(ctx, Goods_GetShopCarAllPrice_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) UserShopCarList(ctx context.Context, in *UserShopCarListReq, opts ...grpc.CallOption) (*UserShopCarListResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserShopCarListResp)
	err := c.cc.Invoke(ctx, Goods_UserShopCarList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) UserSearchShopCarByName(ctx context.Context, in *UserSearchShopCarByNameReq, opts ...grpc.CallOption) (*UserSearchShopCarByNameResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UserSearchShopCarByNameResp)
	err := c.cc.Invoke(ctx, Goods_UserSearchShopCarByName_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) DelOneShopCarData(ctx context.Context, in *DelOneShopCarDataReq, opts ...grpc.CallOption) (*DelOneShopCarDataResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DelOneShopCarDataResp)
	err := c.cc.Invoke(ctx, Goods_DelOneShopCarData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) WelcomeSearchShopList(ctx context.Context, in *WelcomeSearchShopListReq, opts ...grpc.CallOption) (*WelcomeSearchShopListResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WelcomeSearchShopListResp)
	err := c.cc.Invoke(ctx, Goods_WelcomeSearchShopList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) GoodsDetail(ctx context.Context, in *GoodsDetailReq, opts ...grpc.CallOption) (*GoodsDetailResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GoodsDetailResp)
	err := c.cc.Invoke(ctx, Goods_GoodsDetail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) ShopDetail(ctx context.Context, in *ShopDetailReq, opts ...grpc.CallOption) (*ShopDetailResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ShopDetailResp)
	err := c.cc.Invoke(ctx, Goods_ShopDetail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) GoodsPush(ctx context.Context, in *GoodsPushReq, opts ...grpc.CallOption) (*GoodsPushResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GoodsPushResp)
	err := c.cc.Invoke(ctx, Goods_GoodsPush_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) WelcomeSearch(ctx context.Context, in *WelcomeSearchReq, opts ...grpc.CallOption) (*WelcomeSearchResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(WelcomeSearchResp)
	err := c.cc.Invoke(ctx, Goods_WelcomeSearch_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) HotSearch(ctx context.Context, in *HotSearchReq, opts ...grpc.CallOption) (*HotSearchResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(HotSearchResp)
	err := c.cc.Invoke(ctx, Goods_HotSearch_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodsServer is the server API for Goods service.
// All implementations must embed UnimplementedGoodsServer
// for forward compatibility
type GoodsServer interface {
	AddShopCar(context.Context, *AddShopCarReq) (*AddShopCarResp, error)
	AddShopCarNum(context.Context, *AddShopCarNumReq) (*AddShopCarNumResp, error)
	PopShopCarNum(context.Context, *PopShopCarNumReq) (*PopShopCarNumResp, error)
	CleanShopCar(context.Context, *CleanShopCarReq) (*CleanShopCarResp, error)
	UpdateShopCarNum(context.Context, *UpdateShopCarNumReq) (*UpdateShopCarNumResp, error)
	GetShopCarAllPrice(context.Context, *GetShopCarAllPriceReq) (*GetShopCarAllPriceResp, error)
	UserShopCarList(context.Context, *UserShopCarListReq) (*UserShopCarListResp, error)
	UserSearchShopCarByName(context.Context, *UserSearchShopCarByNameReq) (*UserSearchShopCarByNameResp, error)
	DelOneShopCarData(context.Context, *DelOneShopCarDataReq) (*DelOneShopCarDataResp, error)
	WelcomeSearchShopList(context.Context, *WelcomeSearchShopListReq) (*WelcomeSearchShopListResp, error)
	GoodsDetail(context.Context, *GoodsDetailReq) (*GoodsDetailResp, error)
	ShopDetail(context.Context, *ShopDetailReq) (*ShopDetailResp, error)
	GoodsPush(context.Context, *GoodsPushReq) (*GoodsPushResp, error)
	WelcomeSearch(context.Context, *WelcomeSearchReq) (*WelcomeSearchResp, error)
	HotSearch(context.Context, *HotSearchReq) (*HotSearchResp, error)
	mustEmbedUnimplementedGoodsServer()
}

// UnimplementedGoodsServer must be embedded to have forward compatible implementations.
type UnimplementedGoodsServer struct {
}

func (UnimplementedGoodsServer) AddShopCar(context.Context, *AddShopCarReq) (*AddShopCarResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddShopCar not implemented")
}
func (UnimplementedGoodsServer) AddShopCarNum(context.Context, *AddShopCarNumReq) (*AddShopCarNumResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddShopCarNum not implemented")
}
func (UnimplementedGoodsServer) PopShopCarNum(context.Context, *PopShopCarNumReq) (*PopShopCarNumResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PopShopCarNum not implemented")
}
func (UnimplementedGoodsServer) CleanShopCar(context.Context, *CleanShopCarReq) (*CleanShopCarResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanShopCar not implemented")
}
func (UnimplementedGoodsServer) UpdateShopCarNum(context.Context, *UpdateShopCarNumReq) (*UpdateShopCarNumResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShopCarNum not implemented")
}
func (UnimplementedGoodsServer) GetShopCarAllPrice(context.Context, *GetShopCarAllPriceReq) (*GetShopCarAllPriceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShopCarAllPrice not implemented")
}
func (UnimplementedGoodsServer) UserShopCarList(context.Context, *UserShopCarListReq) (*UserShopCarListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserShopCarList not implemented")
}
func (UnimplementedGoodsServer) UserSearchShopCarByName(context.Context, *UserSearchShopCarByNameReq) (*UserSearchShopCarByNameResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserSearchShopCarByName not implemented")
}
func (UnimplementedGoodsServer) DelOneShopCarData(context.Context, *DelOneShopCarDataReq) (*DelOneShopCarDataResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelOneShopCarData not implemented")
}
func (UnimplementedGoodsServer) WelcomeSearchShopList(context.Context, *WelcomeSearchShopListReq) (*WelcomeSearchShopListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WelcomeSearchShopList not implemented")
}
func (UnimplementedGoodsServer) GoodsDetail(context.Context, *GoodsDetailReq) (*GoodsDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoodsDetail not implemented")
}
func (UnimplementedGoodsServer) ShopDetail(context.Context, *ShopDetailReq) (*ShopDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShopDetail not implemented")
}
func (UnimplementedGoodsServer) GoodsPush(context.Context, *GoodsPushReq) (*GoodsPushResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GoodsPush not implemented")
}
func (UnimplementedGoodsServer) WelcomeSearch(context.Context, *WelcomeSearchReq) (*WelcomeSearchResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WelcomeSearch not implemented")
}
func (UnimplementedGoodsServer) HotSearch(context.Context, *HotSearchReq) (*HotSearchResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HotSearch not implemented")
}
func (UnimplementedGoodsServer) mustEmbedUnimplementedGoodsServer() {}

// UnsafeGoodsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GoodsServer will
// result in compilation errors.
type UnsafeGoodsServer interface {
	mustEmbedUnimplementedGoodsServer()
}

func RegisterGoodsServer(s grpc.ServiceRegistrar, srv GoodsServer) {
	s.RegisterService(&Goods_ServiceDesc, srv)
}

func _Goods_AddShopCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddShopCarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).AddShopCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_AddShopCar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).AddShopCar(ctx, req.(*AddShopCarReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_AddShopCarNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddShopCarNumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).AddShopCarNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_AddShopCarNum_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).AddShopCarNum(ctx, req.(*AddShopCarNumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_PopShopCarNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopShopCarNumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).PopShopCarNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_PopShopCarNum_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).PopShopCarNum(ctx, req.(*PopShopCarNumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_CleanShopCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanShopCarReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).CleanShopCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_CleanShopCar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).CleanShopCar(ctx, req.(*CleanShopCarReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_UpdateShopCarNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShopCarNumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).UpdateShopCarNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_UpdateShopCarNum_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).UpdateShopCarNum(ctx, req.(*UpdateShopCarNumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_GetShopCarAllPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShopCarAllPriceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).GetShopCarAllPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_GetShopCarAllPrice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).GetShopCarAllPrice(ctx, req.(*GetShopCarAllPriceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_UserShopCarList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserShopCarListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).UserShopCarList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_UserShopCarList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).UserShopCarList(ctx, req.(*UserShopCarListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_UserSearchShopCarByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSearchShopCarByNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).UserSearchShopCarByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_UserSearchShopCarByName_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).UserSearchShopCarByName(ctx, req.(*UserSearchShopCarByNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_DelOneShopCarData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelOneShopCarDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).DelOneShopCarData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_DelOneShopCarData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).DelOneShopCarData(ctx, req.(*DelOneShopCarDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_WelcomeSearchShopList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WelcomeSearchShopListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).WelcomeSearchShopList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_WelcomeSearchShopList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).WelcomeSearchShopList(ctx, req.(*WelcomeSearchShopListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_GoodsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoodsDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).GoodsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_GoodsDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).GoodsDetail(ctx, req.(*GoodsDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_ShopDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).ShopDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_ShopDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).ShopDetail(ctx, req.(*ShopDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_GoodsPush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoodsPushReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).GoodsPush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_GoodsPush_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).GoodsPush(ctx, req.(*GoodsPushReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_WelcomeSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WelcomeSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).WelcomeSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_WelcomeSearch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).WelcomeSearch(ctx, req.(*WelcomeSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_HotSearch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HotSearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).HotSearch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Goods_HotSearch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).HotSearch(ctx, req.(*HotSearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Goods_ServiceDesc is the grpc.ServiceDesc for Goods service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Goods_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Goods",
	HandlerType: (*GoodsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddShopCar",
			Handler:    _Goods_AddShopCar_Handler,
		},
		{
			MethodName: "AddShopCarNum",
			Handler:    _Goods_AddShopCarNum_Handler,
		},
		{
			MethodName: "PopShopCarNum",
			Handler:    _Goods_PopShopCarNum_Handler,
		},
		{
			MethodName: "CleanShopCar",
			Handler:    _Goods_CleanShopCar_Handler,
		},
		{
			MethodName: "UpdateShopCarNum",
			Handler:    _Goods_UpdateShopCarNum_Handler,
		},
		{
			MethodName: "GetShopCarAllPrice",
			Handler:    _Goods_GetShopCarAllPrice_Handler,
		},
		{
			MethodName: "UserShopCarList",
			Handler:    _Goods_UserShopCarList_Handler,
		},
		{
			MethodName: "UserSearchShopCarByName",
			Handler:    _Goods_UserSearchShopCarByName_Handler,
		},
		{
			MethodName: "DelOneShopCarData",
			Handler:    _Goods_DelOneShopCarData_Handler,
		},
		{
			MethodName: "WelcomeSearchShopList",
			Handler:    _Goods_WelcomeSearchShopList_Handler,
		},
		{
			MethodName: "GoodsDetail",
			Handler:    _Goods_GoodsDetail_Handler,
		},
		{
			MethodName: "ShopDetail",
			Handler:    _Goods_ShopDetail_Handler,
		},
		{
			MethodName: "GoodsPush",
			Handler:    _Goods_GoodsPush_Handler,
		},
		{
			MethodName: "WelcomeSearch",
			Handler:    _Goods_WelcomeSearch_Handler,
		},
		{
			MethodName: "HotSearch",
			Handler:    _Goods_HotSearch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goods.proto",
}
